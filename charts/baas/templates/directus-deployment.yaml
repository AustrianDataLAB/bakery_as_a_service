apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.directus.name }}
spec:
  progressDeadlineSeconds: 60
  replicas: {{ .Values.directus.replicaCount }}
  selector:
    matchLabels:
      servicename: {{ .Values.directus.name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        servicename: {{ .Values.directus.name }}
    spec:
      containers:
      - env:
        - name: KEY
          value: "{{ .Values.directus.key }}"
        - name: SECRET
          value: "{{ .Values.directus.secret }}"
        - name: ADMIN_EMAIL
          value: "{{ .Values.directus.admin.email }}"
        - name: ADMIN_PASSWORD
          value: "{{ .Values.directus.admin.password }}"
        - name: DB_CLIENT
          value: "{{ .Values.directus.client }}"
        - name: DB_HOST
          value: "{{ .Values.postgres.service.name }}"
        - name: DB_PORT
          value: "{{ .Values.postgres.service.port }}"
        - name: DB_DATABASE
          value: "{{ .Values.postgres.database }}"
        - name: DB_USER
          value: "{{ .Values.postgres.user.name }}"
        - name: DB_PASSWORD
          value: "{{ .Values.postgres.user.password }}"
        - name: WEBSOCKETS_ENABLED
          value: "{{ .Values.directus.websockets }}"
        name: {{ .Values.directus.name }}
        image: {{ .Values.directus.image.repository }}:{{ .Values.directus.image.tag }}
        imagePullPolicy: {{ .Values.directus.image.pullPolicy }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /server/health
            port: {{ .Values.directus.service.port }}
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "{{ .Values.directus.resources.limits.cpu }}"
            memory: {{ .Values.directus.resources.limits.memory }}
          requests:
            cpu: "{{ .Values.directus.resources.requests.cpu }}"
            memory: {{ .Values.directus.resources.requests.memory }}
        #volumeMounts:
        #- mountPath: /pv
        #  name: baas-backend
      restartPolicy: {{ .Values.directus.restartPolicy }}
      terminationGracePeriodSeconds: {{ .Values.directus.terminationGracePeriodSeconds }}
      #volumes:
      #- name: baas-backend
      #  persistentVolumeClaim:
      #    claimName: baas-backend