version: '3.4'

x-backend-variables: &backend-variables
  KEY: "replace-with-random-value"
  SECRET: "replace-with-random-value"
  ADMIN_EMAIL: "admin@example.com"
  ADMIN_PASSWORD: "admin"
  DB_CLIENT: "pg"
  DB_HOST: "backend-db"
  DB_PORT: 5432
  DB_DATABASE: "directus"
  DB_USER: "postgres"
  DB_PASSWORD: "postgres"
  WEBSOCKETS_ENABLED: "true"
  DB_POOL__MIN: 1
  DB_POOL__IDLE_TIMEOUT_MILLIS: 3000
  CORS_ENABLED: "true"
  CORS_ORIGIN: "true"

services:
  frontend:
    container_name: frontend
    build: 
      context: ./frontend
    image: baas_frontend
    ports: 
      - 4201:80
    healthcheck:
      test: wget 127.0.0.1:80 --no-verbose --tries=1 --spider || exit 1
      interval: 5s
      retries: 10
      start_period: 10s
      timeout: 5s
    depends_on:
      backend:
        condition: service_healthy  
    networks:
      - baas_network

  document:
    container_name: document-service
    build:
      context: ./document-service
    image: document-service
    ports:
      - 8123:80
    healthcheck:
      test: wget 127.0.0.1:80 --no-verbose --tries=1 --spider || exit 1
      interval: 5s
      retries: 10
      start_period: 10s
      timeout: 5s

  frontend-test:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.test
    networks:
      - baas_network
    depends_on:
      frontend:
        condition: service_healthy

  backend:
    container_name: backend
    build:
      context: ./backend
    ports:
      - 8055:8055
    volumes:
      - directus_uploads:/directus/uploads/
      - directus_extensions:/directus/extensions/
    environment:
      <<: *backend-variables
    healthcheck:
      test: wget 127.0.0.1:8055/admin --no-verbose --tries=1 --spider || exit 1
      interval: 5s
      retries: 10
      start_period: 10s
      timeout: 5s
    depends_on:
      backend-db:
        condition: service_healthy
      document:
        condition: service_healthy
    networks:
      - baas_network

  backend-init-demo:
    container_name: backend-init-demo
    build:
      context: ./backend
    environment:
      <<: *backend-variables
      BASE_URL: "http://backend:8055"
    restart: "no"
    entrypoint: [ "sh", "-c", "cd /opt/dump_restore && python3 restore.py"]
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - baas_network

  backend-db:
    container_name: backend-db
    platform: linux/amd64 # for platform error on Apple M1 chips
    image: postgres:16.2-alpine3.19
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "directus"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d directus -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    ports:
      - 5432:5432
    volumes:
      - ./volume/backend-db:/var/lib/postgresql/data/
    networks:
      - baas_network

networks:
  baas_network:

volumes:
  directus_uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volume/backend/uploads/
  directus_extensions:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volume/backend/extensions/